openapi: 3.0.3
info:
  title: DuoGradus - API Spezifikation
  description: |-
    üëü DuoGradus

    ‚ÄúDuoGradus‚Äù ist eine innovative Anwendung, die dir hilft, deine Fitness-Ziele zu erreichen. Dazu bieten wir dir ein innovatives Konzept, welches auf Gamification und Regelm√§√üigkeit setzt, sodass du dein Ziel auch langfristig erreichen kannst.
    
    Mithilfe von vielen spannenden Challenges ermutigen wir dich Schritte zu sammeln, Fahrrad zu fahren oder im Fitness-Studio zu trainieren. Manchmal geben wir dir auch zus√§tzliche Herausforderungen (z.B. Schritte im Regen), die dann mit Abzeichen und anderen Erfolgen belohnt werden.
    
    Damit dir nicht langweilig wird, kannst du dich zus√§tzlich mit deinen Freunden, aber auch in der globalen Rangliste vergleichen, sodass du immer die Motivation hast, Punkte zu sammeln.
  version: 1.0.0
externalDocs:
  description: Projekt-Repository
  url: https://github.com/SE-TINF22B2/G5-DuoGradus
tags:
  - name: User
    description: Enpoints related to the user, his account and other personal configurations
  - name: Activity
    description: Activities of the current user
  - name: Achievements
  - name: Datasources
  - name: Leaderboard
  - name: Shop
  - name: Order
paths:
 '/users/me':
    get:
      summary: Displays the current users settings
      operationId: getUser
      tags:
        - User
      responses:
        '200':
          description: User object for the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
            description: User not authenticated
    patch:
        summary: Changes a user session
        operationId: patchUser
        tags:
            - User
        requestBody:
            content:
                application/json:
                    schema:
                        type: object
                        parameters:
                            email:
                                type: string
                            name:
                                type: string
                    example:
                        name: Ingolf Nei√üe
                        email: ingolf@neis.se

        responses:
            '204':
                description: User changed successfully
            '400':
                description: Invalid content
            '403':
                description: Not allowed to change attribute
 '/activies':
    get:
        summary: Get a list of activities of the current user
        operationId: listActivities
        tags:
            - Activity
        responses:
            '200':
                description: List of activities
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: '#/components/schemas/Activity'
    post:
        summary: Create an activity as manual record (limits may apply)
        operationId: recordActivity
        tags:
            - Activity
        requestBody:
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: integer
                            begin:
                                type: string
                                format: date-time
                            end:
                                type: string
                                format: date-time
                            value:
                                type: number
                            metric:
                                type: integer
                            points:
                                type: integer
        responses:
            '201':
                description: The activity was created successfully
                content:
                    'application/json':
                        schema:
                            $ref: '#/components/schemas/Activity'
            '400':
                description: Invalid properties / activity type not supported
            '401':
                description: User is not authenticated
 '/activities/{id}':
    get:
        summary: Returns a single activity
        operationId: getActivity
        tags:
            - Activity
        parameters:
            - in: path
              name: id
              schema:
                type: string
              required: true
        responses:
            '200':
                description: Activity
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Activity'
            '404':
                description: Activity not found
            '401':
                description: User is not authenticated
    delete:
        summary: Delete an activity
        operationId: deleteActivity
        tags:
            - Activity
        parameters:
            - in: path
              name: id
              schema:
                type: string
              required: true
        responses:
            '204':
                description: Activity deleted successfully
            '403':
                description: Not allowed to delete activity
            '401':
                description: User not authenticated
                            
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
        verified:
          type: boolean
    Activity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: integer
        begin:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        value:
          type: number
        metric:
          type: integer
        datasource:
          type: string
          format: uuid
        points:
          type: integer
    Achievement:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: integer
        achieved:
          type: boolean
    Datasource:
      type: object
    Leaderboard:
      type: object
    ShopItem:
      type: object
    OrderItem:
      type: object
    Order:
      type: object